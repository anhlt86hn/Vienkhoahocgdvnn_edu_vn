//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VKHGDDTNN.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class VKHGDDTNNEntities : DbContext
    {
        public VKHGDDTNNEntities()
            : base("name=VKHGDDTNNEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Category> Categories { get; set; }
        public DbSet<Config> Configs { get; set; }
        public DbSet<Contact> Contacts { get; set; }
        public DbSet<GroupMember> GroupMembers { get; set; }
        public DbSet<GroupNew> GroupNews { get; set; }
        public DbSet<GroupPicture> GroupPictures { get; set; }
        public DbSet<GroupProduct> GroupProducts { get; set; }
        public DbSet<Member> Members { get; set; }
        public DbSet<Menu> Menus { get; set; }
        public DbSet<News> News { get; set; }
        public DbSet<Picture> Pictures { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<ProImage> ProImages { get; set; }
        public DbSet<v_News_GroupNews> v_News_GroupNews { get; set; }
        public DbSet<v_Picture_GroupPicture> v_Picture_GroupPicture { get; set; }
        public DbSet<v_Product_NameGroup> v_Product_NameGroup { get; set; }
    
        public virtual int sp_Category_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Category_GetByAll_Result> sp_Category_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Category_GetByAll_Result>("sp_Category_GetByAll");
        }
    
        public virtual ObjectResult<sp_Category_GetById_Result> sp_Category_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Category_GetById_Result>("sp_Category_GetById", idParameter);
        }
    
        public virtual int sp_Category_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Category_Insert(string name, string title, string description, string keyword, string tag, string level, Nullable<int> ord, Nullable<bool> active, Nullable<bool> index, Nullable<bool> priority, Nullable<int> idGroupPro)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var idGroupProParameter = idGroupPro.HasValue ?
                new ObjectParameter("IdGroupPro", idGroupPro) :
                new ObjectParameter("IdGroupPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_Insert", nameParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, levelParameter, ordParameter, activeParameter, indexParameter, priorityParameter, idGroupProParameter);
        }
    
        public virtual ObjectResult<sp_Category_Paging_Result> sp_Category_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Category_Paging_Result>("sp_Category_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Category_Update(Nullable<int> id, string name, string title, string description, string keyword, string tag, string level, Nullable<int> ord, Nullable<bool> active, Nullable<bool> index, Nullable<bool> priority, Nullable<int> idGroupPro)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            var idGroupProParameter = idGroupPro.HasValue ?
                new ObjectParameter("IdGroupPro", idGroupPro) :
                new ObjectParameter("IdGroupPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_Update", idParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, levelParameter, ordParameter, activeParameter, indexParameter, priorityParameter, idGroupProParameter);
        }
    
        public virtual int sp_Config_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Config_GetByAll_Result> sp_Config_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Config_GetByAll_Result>("sp_Config_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Config_GetById_Result> sp_Config_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Config_GetById_Result>("sp_Config_GetById", idParameter);
        }
    
        public virtual int sp_Config_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Config_Insert(string mail_Smtp, Nullable<short> mail_Port, string mail_Info, string mail_Noreply, string mail_Password, string placeHead, string placeBody, string googleId, string contact, string deliveryTerms, string paymentTerms, string freeShipping, string copyright, string title, string description, string keyword, string lang, string helpsize, Nullable<int> location)
        {
            var mail_SmtpParameter = mail_Smtp != null ?
                new ObjectParameter("Mail_Smtp", mail_Smtp) :
                new ObjectParameter("Mail_Smtp", typeof(string));
    
            var mail_PortParameter = mail_Port.HasValue ?
                new ObjectParameter("Mail_Port", mail_Port) :
                new ObjectParameter("Mail_Port", typeof(short));
    
            var mail_InfoParameter = mail_Info != null ?
                new ObjectParameter("Mail_Info", mail_Info) :
                new ObjectParameter("Mail_Info", typeof(string));
    
            var mail_NoreplyParameter = mail_Noreply != null ?
                new ObjectParameter("Mail_Noreply", mail_Noreply) :
                new ObjectParameter("Mail_Noreply", typeof(string));
    
            var mail_PasswordParameter = mail_Password != null ?
                new ObjectParameter("Mail_Password", mail_Password) :
                new ObjectParameter("Mail_Password", typeof(string));
    
            var placeHeadParameter = placeHead != null ?
                new ObjectParameter("PlaceHead", placeHead) :
                new ObjectParameter("PlaceHead", typeof(string));
    
            var placeBodyParameter = placeBody != null ?
                new ObjectParameter("PlaceBody", placeBody) :
                new ObjectParameter("PlaceBody", typeof(string));
    
            var googleIdParameter = googleId != null ?
                new ObjectParameter("GoogleId", googleId) :
                new ObjectParameter("GoogleId", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var deliveryTermsParameter = deliveryTerms != null ?
                new ObjectParameter("DeliveryTerms", deliveryTerms) :
                new ObjectParameter("DeliveryTerms", typeof(string));
    
            var paymentTermsParameter = paymentTerms != null ?
                new ObjectParameter("PaymentTerms", paymentTerms) :
                new ObjectParameter("PaymentTerms", typeof(string));
    
            var freeShippingParameter = freeShipping != null ?
                new ObjectParameter("FreeShipping", freeShipping) :
                new ObjectParameter("FreeShipping", typeof(string));
    
            var copyrightParameter = copyright != null ?
                new ObjectParameter("Copyright", copyright) :
                new ObjectParameter("Copyright", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var helpsizeParameter = helpsize != null ?
                new ObjectParameter("Helpsize", helpsize) :
                new ObjectParameter("Helpsize", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Insert", mail_SmtpParameter, mail_PortParameter, mail_InfoParameter, mail_NoreplyParameter, mail_PasswordParameter, placeHeadParameter, placeBodyParameter, googleIdParameter, contactParameter, deliveryTermsParameter, paymentTermsParameter, freeShippingParameter, copyrightParameter, titleParameter, descriptionParameter, keywordParameter, langParameter, helpsizeParameter, locationParameter);
        }
    
        public virtual ObjectResult<sp_Config_Paging_Result> sp_Config_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Config_Paging_Result>("sp_Config_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Config_Update(Nullable<int> id, string mail_Smtp, Nullable<short> mail_Port, string mail_Info, string mail_Noreply, string mail_Password, string placeHead, string placeBody, string googleId, string contact, string deliveryTerms, string paymentTerms, string freeShipping, string copyright, string title, string description, string keyword, string lang, string helpsize, Nullable<int> location)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var mail_SmtpParameter = mail_Smtp != null ?
                new ObjectParameter("Mail_Smtp", mail_Smtp) :
                new ObjectParameter("Mail_Smtp", typeof(string));
    
            var mail_PortParameter = mail_Port.HasValue ?
                new ObjectParameter("Mail_Port", mail_Port) :
                new ObjectParameter("Mail_Port", typeof(short));
    
            var mail_InfoParameter = mail_Info != null ?
                new ObjectParameter("Mail_Info", mail_Info) :
                new ObjectParameter("Mail_Info", typeof(string));
    
            var mail_NoreplyParameter = mail_Noreply != null ?
                new ObjectParameter("Mail_Noreply", mail_Noreply) :
                new ObjectParameter("Mail_Noreply", typeof(string));
    
            var mail_PasswordParameter = mail_Password != null ?
                new ObjectParameter("Mail_Password", mail_Password) :
                new ObjectParameter("Mail_Password", typeof(string));
    
            var placeHeadParameter = placeHead != null ?
                new ObjectParameter("PlaceHead", placeHead) :
                new ObjectParameter("PlaceHead", typeof(string));
    
            var placeBodyParameter = placeBody != null ?
                new ObjectParameter("PlaceBody", placeBody) :
                new ObjectParameter("PlaceBody", typeof(string));
    
            var googleIdParameter = googleId != null ?
                new ObjectParameter("GoogleId", googleId) :
                new ObjectParameter("GoogleId", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var deliveryTermsParameter = deliveryTerms != null ?
                new ObjectParameter("DeliveryTerms", deliveryTerms) :
                new ObjectParameter("DeliveryTerms", typeof(string));
    
            var paymentTermsParameter = paymentTerms != null ?
                new ObjectParameter("PaymentTerms", paymentTerms) :
                new ObjectParameter("PaymentTerms", typeof(string));
    
            var freeShippingParameter = freeShipping != null ?
                new ObjectParameter("FreeShipping", freeShipping) :
                new ObjectParameter("FreeShipping", typeof(string));
    
            var copyrightParameter = copyright != null ?
                new ObjectParameter("Copyright", copyright) :
                new ObjectParameter("Copyright", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var helpsizeParameter = helpsize != null ?
                new ObjectParameter("Helpsize", helpsize) :
                new ObjectParameter("Helpsize", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Update", idParameter, mail_SmtpParameter, mail_PortParameter, mail_InfoParameter, mail_NoreplyParameter, mail_PasswordParameter, placeHeadParameter, placeBodyParameter, googleIdParameter, contactParameter, deliveryTermsParameter, paymentTermsParameter, freeShippingParameter, copyrightParameter, titleParameter, descriptionParameter, keywordParameter, langParameter, helpsizeParameter, locationParameter);
        }
    
        public virtual int sp_Contact_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Contact_GetByAll_Result> sp_Contact_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_GetByAll_Result>("sp_Contact_GetByAll");
        }
    
        public virtual ObjectResult<sp_Contact_GetById_Result> sp_Contact_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_GetById_Result>("sp_Contact_GetById", idParameter);
        }
    
        public virtual int sp_Contact_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Contact_Insert(string name, string title, string email, string phone, string detail, Nullable<System.DateTime> sDate, Nullable<bool> status)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Insert", nameParameter, titleParameter, emailParameter, phoneParameter, detailParameter, sDateParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_Contact_Paging_Result> sp_Contact_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_Paging_Result>("sp_Contact_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Contact_Update(Nullable<int> id, string name, string title, string email, string phone, string detail, Nullable<System.DateTime> sDate, Nullable<bool> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Update", idParameter, nameParameter, titleParameter, emailParameter, phoneParameter, detailParameter, sDateParameter, statusParameter);
        }
    
        public virtual int sp_GroupNews_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupNews_GetByAll_Result> sp_GroupNews_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_GetByAll_Result>("sp_GroupNews_GetByAll");
        }
    
        public virtual ObjectResult<sp_GroupNews_GetById_Result> sp_GroupNews_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_GetById_Result>("sp_GroupNews_GetById", idParameter);
        }
    
        public virtual int sp_GroupNews_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupNews_Insert(string name, string title, string description, string keyword, string tag, string level, Nullable<int> ord, Nullable<bool> active, Nullable<bool> index, Nullable<bool> priority)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Insert", nameParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, levelParameter, ordParameter, activeParameter, indexParameter, priorityParameter);
        }
    
        public virtual ObjectResult<sp_GroupNews_Paging_Result> sp_GroupNews_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_Paging_Result>("sp_GroupNews_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_GroupNews_Update(Nullable<int> id, string name, string title, string description, string keyword, string tag, string level, Nullable<int> ord, Nullable<bool> active, Nullable<bool> index, Nullable<bool> priority)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Update", idParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, levelParameter, ordParameter, activeParameter, indexParameter, priorityParameter);
        }
    
        public virtual int sp_GroupPicture_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupPicture_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupPicture_Insert(string name, string title, string description, string keyword, string tag, Nullable<int> ord, Nullable<bool> active, Nullable<bool> index)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupPicture_Insert", nameParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, ordParameter, activeParameter, indexParameter);
        }
    
        public virtual ObjectResult<sp_GroupPicture_Paging_Result> sp_GroupPicture_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupPicture_Paging_Result>("sp_GroupPicture_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_GroupPicture_Update(Nullable<int> id, string name, string title, string description, string keyword, string tag, Nullable<int> ord, Nullable<bool> active, Nullable<bool> index)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupPicture_Update", idParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, ordParameter, activeParameter, indexParameter);
        }
    
        public virtual int sp_GroupProduct_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupProduct_GetByAll_Result> sp_GroupProduct_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupProduct_GetByAll_Result>("sp_GroupProduct_GetByAll");
        }
    
        public virtual ObjectResult<sp_GroupProduct_GetById_Result> sp_GroupProduct_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupProduct_GetById_Result>("sp_GroupProduct_GetById", idParameter);
        }
    
        public virtual int sp_GroupProduct_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupProduct_Insert(string name, string title, string description, string keyword, string tag, string level, Nullable<int> ord, Nullable<bool> active, Nullable<bool> index, Nullable<bool> priority)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_Insert", nameParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, levelParameter, ordParameter, activeParameter, indexParameter, priorityParameter);
        }
    
        public virtual ObjectResult<sp_GroupProduct_Paging_Result> sp_GroupProduct_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupProduct_Paging_Result>("sp_GroupProduct_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_GroupProduct_Update(Nullable<int> id, string name, string title, string description, string keyword, string tag, string level, Nullable<int> ord, Nullable<bool> active, Nullable<bool> index, Nullable<bool> priority)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_Update", idParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, tagParameter, levelParameter, ordParameter, activeParameter, indexParameter, priorityParameter);
        }
    
        public virtual int sp_Member_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Member_GetByAll_Result> sp_Member_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Member_GetByAll_Result>("sp_Member_GetByAll");
        }
    
        public virtual ObjectResult<sp_Member_GetById_Result> sp_Member_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Member_GetById_Result>("sp_Member_GetById", idParameter);
        }
    
        public virtual int sp_Member_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Member_Insert(string name, string username, string password, Nullable<int> permiss, Nullable<bool> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var permissParameter = permiss.HasValue ?
                new ObjectParameter("Permiss", permiss) :
                new ObjectParameter("Permiss", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_Insert", nameParameter, usernameParameter, passwordParameter, permissParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_Member_Paging_Result> sp_Member_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Member_Paging_Result>("sp_Member_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Member_Update(Nullable<int> id, string name, string username, string password, Nullable<int> permiss, Nullable<bool> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var permissParameter = permiss.HasValue ?
                new ObjectParameter("Permiss", permiss) :
                new ObjectParameter("Permiss", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_Update", idParameter, nameParameter, usernameParameter, passwordParameter, permissParameter, activeParameter);
        }
    
        public virtual int sp_Menu_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Menu_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Menu_GetByAll_Result> sp_Menu_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_GetByAll_Result>("sp_Menu_GetByAll");
        }
    
        public virtual ObjectResult<sp_Menu_GetById_Result> sp_Menu_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_GetById_Result>("sp_Menu_GetById", idParameter);
        }
    
        public virtual int sp_Menu_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Menu_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Menu_Insert(string name, string title, string description, string keyword, string image, string link, string tag, string level, Nullable<int> position, Nullable<int> ord, Nullable<bool> active, string target, string content, string detail, Nullable<int> idCategory)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Menu_Insert", nameParameter, titleParameter, descriptionParameter, keywordParameter, imageParameter, linkParameter, tagParameter, levelParameter, positionParameter, ordParameter, activeParameter, targetParameter, contentParameter, detailParameter, idCategoryParameter);
        }
    
        public virtual ObjectResult<sp_Menu_Paging_Result> sp_Menu_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Menu_Paging_Result>("sp_Menu_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Menu_Update(Nullable<int> id, string name, string title, string description, string keyword, string image, string link, string tag, string level, Nullable<int> position, Nullable<int> ord, Nullable<bool> active, string target, string content, string detail, Nullable<int> idCategory)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Menu_Update", idParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, imageParameter, linkParameter, tagParameter, levelParameter, positionParameter, ordParameter, activeParameter, targetParameter, contentParameter, detailParameter, idCategoryParameter);
        }
    
        public virtual int sp_News_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_News_GetByAll_Result> sp_News_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetByAll_Result>("sp_News_GetByAll");
        }
    
        public virtual ObjectResult<sp_News_GetByAll_GroupNews_Result> sp_News_GetByAll_GroupNews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetByAll_GroupNews_Result>("sp_News_GetByAll_GroupNews");
        }
    
        public virtual ObjectResult<sp_News_GetById_Result> sp_News_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetById_Result>("sp_News_GetById", idParameter);
        }
    
        public virtual int sp_News_GetBySDate(string where, string mDate)
        {
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var mDateParameter = mDate != null ?
                new ObjectParameter("MDate", mDate) :
                new ObjectParameter("MDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_GetBySDate", whereParameter, mDateParameter);
        }
    
        public virtual int sp_News_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_News_Insert(string name, string title, string description, string keyword, string image, string tag, Nullable<int> ord, Nullable<bool> active, Nullable<bool> index, Nullable<int> view, Nullable<System.DateTime> sDate, Nullable<System.DateTime> mDate, string content, string detail, Nullable<int> idGroup)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("View", view) :
                new ObjectParameter("View", typeof(int));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var mDateParameter = mDate.HasValue ?
                new ObjectParameter("MDate", mDate) :
                new ObjectParameter("MDate", typeof(System.DateTime));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var idGroupParameter = idGroup.HasValue ?
                new ObjectParameter("IdGroup", idGroup) :
                new ObjectParameter("IdGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Insert", nameParameter, titleParameter, descriptionParameter, keywordParameter, imageParameter, tagParameter, ordParameter, activeParameter, indexParameter, viewParameter, sDateParameter, mDateParameter, contentParameter, detailParameter, idGroupParameter);
        }
    
        public virtual ObjectResult<sp_News_Paging_Result> sp_News_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_Paging_Result>("sp_News_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_News_Update(Nullable<int> id, string name, string title, string description, string keyword, string image, string tag, Nullable<int> ord, Nullable<bool> active, Nullable<bool> index, Nullable<int> view, Nullable<System.DateTime> mDate, string content, string detail, Nullable<int> idGroup)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("View", view) :
                new ObjectParameter("View", typeof(int));
    
            var mDateParameter = mDate.HasValue ?
                new ObjectParameter("MDate", mDate) :
                new ObjectParameter("MDate", typeof(System.DateTime));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var idGroupParameter = idGroup.HasValue ?
                new ObjectParameter("IdGroup", idGroup) :
                new ObjectParameter("IdGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Update", idParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, imageParameter, tagParameter, ordParameter, activeParameter, indexParameter, viewParameter, mDateParameter, contentParameter, detailParameter, idGroupParameter);
        }
    
        public virtual int sp_Picture_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Picture_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Picture_GetByAll_Result> sp_Picture_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Picture_GetByAll_Result>("sp_Picture_GetByAll");
        }
    
        public virtual ObjectResult<sp_Picture_GetByAll_GroupPicture_Result> sp_Picture_GetByAll_GroupPicture()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Picture_GetByAll_GroupPicture_Result>("sp_Picture_GetByAll_GroupPicture");
        }
    
        public virtual ObjectResult<sp_Picture_GetById_Result> sp_Picture_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Picture_GetById_Result>("sp_Picture_GetById", idParameter);
        }
    
        public virtual int sp_Picture_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Picture_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Picture_Insert(string name, string description, string image, string link, Nullable<int> position, Nullable<int> ord, Nullable<bool> active, Nullable<int> width, Nullable<int> height, Nullable<int> click, string target)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var clickParameter = click.HasValue ?
                new ObjectParameter("Click", click) :
                new ObjectParameter("Click", typeof(int));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Picture_Insert", nameParameter, descriptionParameter, imageParameter, linkParameter, positionParameter, ordParameter, activeParameter, widthParameter, heightParameter, clickParameter, targetParameter);
        }
    
        public virtual ObjectResult<sp_Picture_Paging_Result> sp_Picture_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Picture_Paging_Result>("sp_Picture_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Picture_Update(Nullable<int> id, string name, string description, string image, string link, Nullable<int> position, Nullable<int> ord, Nullable<bool> active, Nullable<int> width, Nullable<int> height, Nullable<int> click, string target)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var clickParameter = click.HasValue ?
                new ObjectParameter("Click", click) :
                new ObjectParameter("Click", typeof(int));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Picture_Update", idParameter, nameParameter, descriptionParameter, imageParameter, linkParameter, positionParameter, ordParameter, activeParameter, widthParameter, heightParameter, clickParameter, targetParameter);
        }
    
        public virtual int sp_Product_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Product_GetByAll_Result> sp_Product_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_GetByAll_Result>("sp_Product_GetByAll");
        }
    
        public virtual ObjectResult<sp_Product_GetByAll_NameGroup_Result> sp_Product_GetByAll_NameGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_GetByAll_NameGroup_Result>("sp_Product_GetByAll_NameGroup");
        }
    
        public virtual ObjectResult<sp_Product_GetById_Result> sp_Product_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_GetById_Result>("sp_Product_GetById", idParameter);
        }
    
        public virtual int sp_Product_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Product_GetByTop_GroupName(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_GetByTop_GroupName", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Product_Insert(string code, string name, string title, string description, string keyword, string image, string tag, Nullable<short> status, Nullable<int> ord, Nullable<bool> active, Nullable<bool> index, Nullable<int> like, Nullable<int> view, Nullable<int> count, Nullable<int> num, Nullable<bool> inventory, string priceRetail, string pricePromotion, string content, Nullable<System.DateTime> sDate, Nullable<System.DateTime> eDate, Nullable<int> idCategory, Nullable<int> idCategory2)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(short));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var likeParameter = like.HasValue ?
                new ObjectParameter("Like", like) :
                new ObjectParameter("Like", typeof(int));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("View", view) :
                new ObjectParameter("View", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("Num", num) :
                new ObjectParameter("Num", typeof(int));
    
            var inventoryParameter = inventory.HasValue ?
                new ObjectParameter("Inventory", inventory) :
                new ObjectParameter("Inventory", typeof(bool));
    
            var priceRetailParameter = priceRetail != null ?
                new ObjectParameter("PriceRetail", priceRetail) :
                new ObjectParameter("PriceRetail", typeof(string));
    
            var pricePromotionParameter = pricePromotion != null ?
                new ObjectParameter("PricePromotion", pricePromotion) :
                new ObjectParameter("PricePromotion", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var eDateParameter = eDate.HasValue ?
                new ObjectParameter("EDate", eDate) :
                new ObjectParameter("EDate", typeof(System.DateTime));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            var idCategory2Parameter = idCategory2.HasValue ?
                new ObjectParameter("IdCategory2", idCategory2) :
                new ObjectParameter("IdCategory2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Insert", codeParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, imageParameter, tagParameter, statusParameter, ordParameter, activeParameter, indexParameter, likeParameter, viewParameter, countParameter, numParameter, inventoryParameter, priceRetailParameter, pricePromotionParameter, contentParameter, sDateParameter, eDateParameter, idCategoryParameter, idCategory2Parameter);
        }
    
        public virtual ObjectResult<sp_Product_Paging_Result> sp_Product_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_Paging_Result>("sp_Product_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Product_Update(Nullable<int> id, string code, string name, string title, string description, string keyword, string image, string tag, Nullable<short> status, Nullable<int> ord, Nullable<bool> active, Nullable<bool> index, Nullable<int> like, Nullable<int> view, Nullable<int> count, Nullable<int> num, Nullable<bool> inventory, string priceRetail, string pricePromotion, string content, Nullable<System.DateTime> mDate, Nullable<int> idCategory, Nullable<int> idCategory2)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(short));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(bool));
    
            var likeParameter = like.HasValue ?
                new ObjectParameter("Like", like) :
                new ObjectParameter("Like", typeof(int));
    
            var viewParameter = view.HasValue ?
                new ObjectParameter("View", view) :
                new ObjectParameter("View", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var numParameter = num.HasValue ?
                new ObjectParameter("Num", num) :
                new ObjectParameter("Num", typeof(int));
    
            var inventoryParameter = inventory.HasValue ?
                new ObjectParameter("Inventory", inventory) :
                new ObjectParameter("Inventory", typeof(bool));
    
            var priceRetailParameter = priceRetail != null ?
                new ObjectParameter("PriceRetail", priceRetail) :
                new ObjectParameter("PriceRetail", typeof(string));
    
            var pricePromotionParameter = pricePromotion != null ?
                new ObjectParameter("PricePromotion", pricePromotion) :
                new ObjectParameter("PricePromotion", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var mDateParameter = mDate.HasValue ?
                new ObjectParameter("MDate", mDate) :
                new ObjectParameter("MDate", typeof(System.DateTime));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            var idCategory2Parameter = idCategory2.HasValue ?
                new ObjectParameter("IdCategory2", idCategory2) :
                new ObjectParameter("IdCategory2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Update", idParameter, codeParameter, nameParameter, titleParameter, descriptionParameter, keywordParameter, imageParameter, tagParameter, statusParameter, ordParameter, activeParameter, indexParameter, likeParameter, viewParameter, countParameter, numParameter, inventoryParameter, priceRetailParameter, pricePromotionParameter, contentParameter, mDateParameter, idCategoryParameter, idCategory2Parameter);
        }
    
        public virtual int sp_ProImage_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProImage_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_ProImage_GetByAll_Result> sp_ProImage_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProImage_GetByAll_Result>("sp_ProImage_GetByAll");
        }
    
        public virtual ObjectResult<sp_ProImage_GetById_Result> sp_ProImage_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProImage_GetById_Result>("sp_ProImage_GetById", idParameter);
        }
    
        public virtual int sp_ProImage_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProImage_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_ProImage_Insert(Nullable<int> idPro, string image, Nullable<System.DateTime> sDate, Nullable<int> ord)
        {
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProImage_Insert", idProParameter, imageParameter, sDateParameter, ordParameter);
        }
    
        public virtual ObjectResult<sp_ProImage_Paging_Result> sp_ProImage_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProImage_Paging_Result>("sp_ProImage_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_ProImage_Update(Nullable<int> id, Nullable<int> idPro, string image, Nullable<System.DateTime> sDate, Nullable<int> ord)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("IdPro", idPro) :
                new ObjectParameter("IdPro", typeof(int));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var sDateParameter = sDate.HasValue ?
                new ObjectParameter("SDate", sDate) :
                new ObjectParameter("SDate", typeof(System.DateTime));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProImage_Update", idParameter, idProParameter, imageParameter, sDateParameter, ordParameter);
        }
    }
}
